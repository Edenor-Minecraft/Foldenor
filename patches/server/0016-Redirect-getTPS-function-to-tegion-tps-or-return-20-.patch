From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AltronMaxX <max06112004@gmail.com>
Date: Sat, 16 Sep 2023 21:45:54 +0400
Subject: [PATCH] Redirect-getTPS-function-to-tegion-tps-or-return-20-tps


diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 95fd5ca9d4b93b0a350040d31493ee7ef4a5478b..cf6efdc6a81dfe154b496c7bfbd0782b4791d868 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -15,6 +15,9 @@ import com.mojang.brigadier.tree.LiteralCommandNode;
 import com.mojang.datafixers.util.Pair;
 import com.mojang.serialization.DynamicOps;
 import com.mojang.serialization.Lifecycle;
+import io.papermc.paper.threadedregions.ThreadedRegionizer;
+import io.papermc.paper.threadedregions.TickRegionScheduler;
+import io.papermc.paper.threadedregions.TickRegions;
 import it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap;
 import java.awt.image.BufferedImage;
 import java.io.ByteArrayOutputStream;
@@ -2941,11 +2944,21 @@ public final class CraftServer implements Server {
     // Paper - Add getTPS API - Further improve tick loop
     @Override
     public double[] getTPS() {
-        return new double[] {
-                net.minecraft.server.MinecraftServer.getServer().tps1.getAverage(),
-                net.minecraft.server.MinecraftServer.getServer().tps5.getAverage(),
-                net.minecraft.server.MinecraftServer.getServer().tps15.getAverage()
-        };
+        ThreadedRegionizer.ThreadedRegion<TickRegions.TickRegionData, TickRegions.TickRegionSectionData> curRegion =  TickRegionScheduler.getCurrentRegion();
+        if (curRegion != null){
+            return new double[] {
+                curRegion.getData().getRegionSchedulingHandle().getTickReport5s(System.nanoTime()).tpsData().segmentAll().average(),
+                curRegion.getData().getRegionSchedulingHandle().getTickReport1m(System.nanoTime()).tpsData().segmentAll().average(),
+                curRegion.getData().getRegionSchedulingHandle().getTickReport5m(System.nanoTime()).tpsData().segmentAll().average()
+            };
+        }
+        else{
+            return new double[] {
+                20,
+                20,
+                20
+            };
+        }
     }
 
     @Override
