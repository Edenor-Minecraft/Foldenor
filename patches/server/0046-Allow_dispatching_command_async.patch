From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AltronMaxX <max06112004@gmail.com>
Date: Thu, 13 Jul 2023 21:40:00 +0400
Subject: [PATCH] Allow_dispatching_command_async


diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
index 0c7339f8f0a1ec3867be3b2f39182332053229f3..9a54ac425b46c756c05ca64c571b5bca5278f68f 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
@@ -760,12 +760,12 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
         Waitable[] waitableArray = new Waitable[1];
         this.rconConsoleSource.prepareForCommand();
         //this.executeBlocking(() -> {
-        io.papermc.paper.threadedregions.RegionizedServer.getInstance().addTaskWithoutNotify(() ->{
+        //io.papermc.paper.threadedregions.RegionizedServer.getInstance().addTaskWithoutNotify(() ->{
             // CraftBukkit start - fire RemoteServerCommandEvent
             RemoteServerCommandEvent event = new RemoteServerCommandEvent(remoteConsole, command);
             server.getPluginManager().callEvent(event);
             if (event.isCancelled()) {
-                return;
+                return "";
             }
             // Paper start
             if (command.toLowerCase().startsWith("timings") && command.toLowerCase().matches("timings (report|paste|get|merged|seperate)")) {
@@ -784,7 +784,7 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
                 server.dispatchCommand(remoteConsole, serverCommand.msg);
             } // Paper
             // CraftBukkit end
-        });
+        //});
 
         //});
         // Paper start
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index e38cd6faa29522ca5827c0b9be4ae732e8b80db1..3820328c8c9b279ef8839f753a9bac2205ba521c 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -1008,13 +1008,13 @@ public final class CraftServer implements Server {
     public boolean dispatchCommand(CommandSender sender, String commandLine) {
         Preconditions.checkArgument(sender != null, "sender cannot be null");
         Preconditions.checkArgument(commandLine != null, "commandLine cannot be null");
-        org.spigotmc.AsyncCatcher.catchOp("command dispatch"); // Spigot
+        //org.spigotmc.AsyncCatcher.catchOp("command dispatch"); // Spigot
 
         // Folia start - region threading
         if ((sender instanceof Entity entity)) {
             io.papermc.paper.util.TickThread.ensureTickThread(((org.bukkit.craftbukkit.entity.CraftEntity)entity).getHandle(), "Dispatching command async");
         } else if (sender instanceof ConsoleCommandSender console) {
-            io.papermc.paper.threadedregions.RegionizedServer.ensureGlobalTickThread("Dispatching command async");
+            //io.papermc.paper.threadedregions.RegionizedServer.ensureGlobalTickThread("Dispatching command async");
         } else {
             // huh?
             //throw new UnsupportedOperationException("Dispatching command for " + sender);
@@ -1022,7 +1022,7 @@ public final class CraftServer implements Server {
         // Folia end - region threading
 
         // Paper Start
-        if (!org.spigotmc.AsyncCatcher.shuttingDown && !Bukkit.isPrimaryThread()) {
+        /*if (!org.spigotmc.AsyncCatcher.shuttingDown && !Bukkit.isPrimaryThread()) {
             final CommandSender fSender = sender;
             final String fCommandLine = commandLine;
             Bukkit.getLogger().log(Level.SEVERE, "Command Dispatched Async: " + commandLine);
@@ -1041,7 +1041,7 @@ public final class CraftServer implements Server {
             } catch (Exception e) {
                 throw new RuntimeException("Exception processing dispatch command", e.getCause());
             }
-        }
+        }*/
         // Paper End
         if (this.commandMap.dispatch(sender, commandLine)) {
             return true;
