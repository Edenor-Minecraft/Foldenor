From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AltronMaxX <max06112004@gmail.com>
Date: Wed, 2 Aug 2023 16:08:40 +0400
Subject: [PATCH] Add-chunktp-command


diff --git a/src/main/java/net/edenor/foldenor/command/FoldenorCommands.java b/src/main/java/net/edenor/foldenor/command/FoldenorCommands.java
index 8f2a4df8958c4b41fc5b6780c0700a6ae3b49be9..15ec8927b219ac4006332ffdbb59b7de70cf6d23 100644
--- a/src/main/java/net/edenor/foldenor/command/FoldenorCommands.java
+++ b/src/main/java/net/edenor/foldenor/command/FoldenorCommands.java
@@ -1,5 +1,6 @@
 package net.edenor.foldenor.command;
 
+import net.edenor.foldenor.commands.ChunkTPCommand;
 import net.edenor.foldenor.commands.FoldenorReloadConfigCommand;
 import net.minecraft.server.MinecraftServer;
 import org.bukkit.command.Command;
@@ -18,6 +19,7 @@ public final class FoldenorCommands {
     private static final Map<String, Command> COMMANDS = new HashMap<>();
     static {
         COMMANDS.put("foldenor-reload", new FoldenorReloadConfigCommand("foldenor-reload"));
+        COMMANDS.put("chunktp", new ChunkTPCommand("chunktp"));
     }
 
     public static void registerCommands(final MinecraftServer server) {
diff --git a/src/main/java/net/edenor/foldenor/commands/ChunkTPCommand.java b/src/main/java/net/edenor/foldenor/commands/ChunkTPCommand.java
new file mode 100644
index 0000000000000000000000000000000000000000..629fcb1b362c15fb3b989cc0581cf97c81237688
--- /dev/null
+++ b/src/main/java/net/edenor/foldenor/commands/ChunkTPCommand.java
@@ -0,0 +1,63 @@
+package net.edenor.foldenor.commands;
+
+
+import org.bukkit.Bukkit;
+import org.bukkit.Location;
+import org.bukkit.command.Command;
+import org.bukkit.command.CommandSender;
+import org.bukkit.craftbukkit.entity.CraftPlayer;
+import org.bukkit.event.player.PlayerTeleportEvent;
+import org.bukkit.permissions.Permission;
+import org.bukkit.permissions.PermissionDefault;
+import org.bukkit.plugin.PluginManager;
+import org.jetbrains.annotations.NotNull;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class ChunkTPCommand extends Command {
+    public ChunkTPCommand(@NotNull String name) {
+        super(name);
+        final List<String> permissions = new ArrayList<>();
+        permissions.add("bukkit.command.foldenor.chunktp");
+        this.setPermission(String.join(";", permissions));
+        final PluginManager pluginManager = Bukkit.getServer().getPluginManager();
+        pluginManager.addPermission(new Permission("bukkit.command.foldenor.chunktp", PermissionDefault.OP));
+    }
+
+    @Override
+    public boolean execute(@NotNull CommandSender sender, @NotNull String commandLabel, @NotNull String[] args) {
+        if (!sender.hasPermission("bukkit.command.foldenor.chunktp")) {
+            sender.sendMessage(Bukkit.permissionMessage());
+            return false;
+        }
+
+        if (sender instanceof CraftPlayer player) {
+            if (args.length == 2) {
+                if (this.validateArguments(args[0], args[1])) {
+                    double x = Integer.parseInt(args[0]) * 16;
+                    double z = Integer.parseInt(args[1]) * 16;
+                    if (player.teleport(new Location(player.getWorld(), x, 100.0D, z), PlayerTeleportEvent.TeleportCause.PLUGIN)) {
+                        player.sendMessage("You were teleported to: " + x + " , 100, " + z);
+                    } else {
+                        player.sendMessage("You couldn't be teleported there for some reason.");
+                    }
+                }
+            } else {
+                player.sendMessage("You must specify chunk coordinates. Example: /chunktp -230 334");
+            }
+        }
+
+        return true;
+    }
+
+    private boolean validateArguments(String string, String string2) {
+        try {
+            Integer.parseInt(string);
+            Integer.parseInt(string2);
+            return true;
+        } catch (NumberFormatException var4) {
+            return false;
+        }
+    }
+}
