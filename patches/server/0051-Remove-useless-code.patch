From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AltronMaxX <max06112004@gmail.com>
Date: Wed, 2 Aug 2023 23:20:31 +0400
Subject: [PATCH] Remove-useless-code


diff --git a/src/main/java/io/papermc/paper/util/TickThread.java b/src/main/java/io/papermc/paper/util/TickThread.java
index b6e39f38bfe3d4dcfdc4f02d4b29d1034680c22c..269d815bb0815fb7304a9142f03a92930e7c7032 100644
--- a/src/main/java/io/papermc/paper/util/TickThread.java
+++ b/src/main/java/io/papermc/paper/util/TickThread.java
@@ -139,19 +139,10 @@ public class TickThread extends Thread {
         if (world.chunkTaskScheduler.isHalted()) { //As soon as we halt the activity, it's the global tick thread's propriety
             return RegionizedServer.isGlobalTickThread() || isShutdownThread();
         }
-        ThreadedRegionizer.ThreadedRegion<TickRegions.TickRegionData, TickRegions.TickRegionSectionData> region =
+        final ThreadedRegionizer.ThreadedRegion<TickRegions.TickRegionData, TickRegions.TickRegionSectionData> region =
             TickRegionScheduler.getCurrentRegion();
         if (region == null) {
-            try{
-                region = world.regioniser.getRegionAtSynchronised(chunkX, chunkZ);
-                if (region == null){
-                    MinecraftServer.LOGGER.warn("Region at position [" + chunkX + ", " + chunkZ + "] is null!");
-                    return isShutdownThread();
-                }
-            } catch (Exception e) {
-                MinecraftServer.LOGGER.warn("Region at position [" + chunkX + ", " + chunkZ + "] is null!");
-                return isShutdownThread();
-            }
+            return isShutdownThread();
         }
         return world.regioniser.getRegionAtUnsynchronised(chunkX, chunkZ) == region;
     }
diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index ced3dfa5e760c6f9c13058791eefc78928a57288..76b6c4feb195f56b113358cafe89003fe971a124 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -1729,11 +1729,9 @@ public class ServerLevel extends Level implements WorldGenLevel {
         } else {
             if (entity instanceof net.minecraft.world.entity.item.ItemEntity itemEntity && itemEntity.getItem().isEmpty()) return false; // Paper - Prevent empty items from being added
             // Paper start - capture all item additions to the world
-            if (this.getCurrentWorldData() != null){
-                if (this.getCurrentWorldData().captureDrops != null && entity instanceof net.minecraft.world.entity.item.ItemEntity) { // Folia - region threading
-                    this.getCurrentWorldData().captureDrops.add((net.minecraft.world.entity.item.ItemEntity) entity); // Folia - region threading
-                    return true;
-                }
+            if (this.getCurrentWorldData().captureDrops != null && entity instanceof net.minecraft.world.entity.item.ItemEntity) { // Folia - region threading
+                this.getCurrentWorldData().captureDrops.add((net.minecraft.world.entity.item.ItemEntity) entity); // Folia - region threading
+                return true;
             }
             // Paper end
             // SPIGOT-6415: Don't call spawn event when reason is null. For example when an entity teleports to a new world.
