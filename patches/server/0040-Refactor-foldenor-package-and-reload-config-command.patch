From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AltronMaxX <max06112004@gmail.com>
Date: Mon, 10 Jul 2023 16:56:42 +0400
Subject: [PATCH] Refactor-foldenor-package-and-reload-config-command


diff --git a/src/main/java/net/edenor/foldenor/command/FoldenorCommands.java b/src/main/java/net/edenor/foldenor/command/FoldenorCommands.java
new file mode 100644
index 0000000000000000000000000000000000000000..8f2a4df8958c4b41fc5b6780c0700a6ae3b49be9
--- /dev/null
+++ b/src/main/java/net/edenor/foldenor/command/FoldenorCommands.java
@@ -0,0 +1,28 @@
+package net.edenor.foldenor.command;
+
+import net.edenor.foldenor.commands.FoldenorReloadConfigCommand;
+import net.minecraft.server.MinecraftServer;
+import org.bukkit.command.Command;
+import org.checkerframework.checker.nullness.qual.NonNull;
+import org.checkerframework.framework.qual.DefaultQualifier;
+
+import java.util.HashMap;
+import java.util.Map;
+
+@DefaultQualifier(NonNull.class)
+public final class FoldenorCommands {
+
+    private FoldenorCommands() {
+    }
+
+    private static final Map<String, Command> COMMANDS = new HashMap<>();
+    static {
+        COMMANDS.put("foldenor-reload", new FoldenorReloadConfigCommand("foldenor-reload"));
+    }
+
+    public static void registerCommands(final MinecraftServer server) {
+        COMMANDS.forEach((s, command) -> {
+            server.server.getCommandMap().register(s, "Foldenor", command);
+        });
+    }
+}
diff --git a/src/main/java/net/edenor/foldenor/commands/FoldenorReloadConfigCommand.java b/src/main/java/net/edenor/foldenor/commands/FoldenorReloadConfigCommand.java
new file mode 100644
index 0000000000000000000000000000000000000000..ad854d09999ce2bee9e48976eb79ef02426947a4
--- /dev/null
+++ b/src/main/java/net/edenor/foldenor/commands/FoldenorReloadConfigCommand.java
@@ -0,0 +1,46 @@
+package net.edenor.foldenor.commands;
+
+import net.edenor.foldenor.config.FoldenorConfig;
+import net.minecraft.server.dedicated.DedicatedServer;
+import org.bukkit.Bukkit;
+import org.bukkit.command.Command;
+import org.bukkit.command.CommandSender;
+import org.bukkit.permissions.Permission;
+import org.bukkit.permissions.PermissionDefault;
+import org.bukkit.plugin.PluginManager;
+import org.jetbrains.annotations.NotNull;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import static net.kyori.adventure.text.Component.text;
+import static net.kyori.adventure.text.format.NamedTextColor.GREEN;
+import static net.kyori.adventure.text.format.NamedTextColor.RED;
+
+public class FoldenorReloadConfigCommand extends Command {
+
+    public FoldenorReloadConfigCommand(@NotNull String name) {
+        super(name);
+        final List<String> permissions = new ArrayList<>();
+        permissions.add("bukkit.command.foldenor.reload_config");
+        this.setPermission(String.join(";", permissions));
+        final PluginManager pluginManager = Bukkit.getServer().getPluginManager();
+        pluginManager.addPermission(new Permission("bukkit.command.foldenor.reload_config", PermissionDefault.OP));
+    }
+
+    @Override
+    public boolean execute(@NotNull CommandSender sender, @NotNull String commandLabel, @NotNull String[] args) {
+        if (!sender.hasPermission("bukkit.command.foldenor.reload_config")) {
+            sender.sendMessage(Bukkit.permissionMessage());
+            return false;
+        }
+        try {
+            FoldenorConfig.reload((java.io.File) DedicatedServer.getServer().options.valueOf("foldenor-settings"));
+            Command.broadcastCommandMessage(sender, text("Foldenor config reload complete.", GREEN));
+            return true;
+        } catch (Exception e) {
+            Command.broadcastCommandMessage(sender, text("Error while reloading Foldenor config \n." + e.toString(), RED));
+            throw new RuntimeException(e);
+        }
+    }
+}
diff --git a/src/main/java/net/edenor/foldenor/FoldenorConfig.java b/src/main/java/net/edenor/foldenor/config/FoldenorConfig.java
similarity index 99%
rename from src/main/java/net/edenor/foldenor/FoldenorConfig.java
rename to src/main/java/net/edenor/foldenor/config/FoldenorConfig.java
index e86d4acafb24db3567030c9f0e8694557b1491a8..565e86cc94ccb5cd333ae64bbb0b1220de96669f 100644
--- a/src/main/java/net/edenor/foldenor/FoldenorConfig.java
+++ b/src/main/java/net/edenor/foldenor/config/FoldenorConfig.java
@@ -1,4 +1,4 @@
-package net.edenor.foldenor;
+package net.edenor.foldenor.config;
 
 import com.google.common.base.Throwables;
 import com.google.common.collect.ImmutableMap;
diff --git a/src/main/java/net/edenor/foldenor/Globals.java b/src/main/java/net/edenor/foldenor/secureseed/Globals.java
similarity index 98%
rename from src/main/java/net/edenor/foldenor/Globals.java
rename to src/main/java/net/edenor/foldenor/secureseed/Globals.java
index a2e7ab99cf17cf9d08c5d93c44325fe6cf4f3df0..0530a8a2b31faf64a905515d7f1a2bdbf04f0996 100644
--- a/src/main/java/net/edenor/foldenor/Globals.java
+++ b/src/main/java/net/edenor/foldenor/secureseed/Globals.java
@@ -1,4 +1,4 @@
-package net.edenor.foldenor;
+package net.edenor.foldenor.secureseed;
 
 import com.google.common.collect.Iterables;
 import net.minecraft.server.level.ServerLevel;
diff --git a/src/main/java/net/edenor/foldenor/Hashing.java b/src/main/java/net/edenor/foldenor/secureseed/Hashing.java
similarity index 99%
rename from src/main/java/net/edenor/foldenor/Hashing.java
rename to src/main/java/net/edenor/foldenor/secureseed/Hashing.java
index 010b620d141b07011740412b9180fb11ef0ef8fc..77d09c878458709e37fc692844daa2ec642eb771 100644
--- a/src/main/java/net/edenor/foldenor/Hashing.java
+++ b/src/main/java/net/edenor/foldenor/secureseed/Hashing.java
@@ -1,4 +1,4 @@
-package net.edenor.foldenor;
+package net.edenor.foldenor.secureseed;
 
 public class Hashing {
     private final static long[] blake2b_IV = {
diff --git a/src/main/java/net/edenor/foldenor/WorldgenCryptoRandom.java b/src/main/java/net/edenor/foldenor/secureseed/WorldgenCryptoRandom.java
similarity index 99%
rename from src/main/java/net/edenor/foldenor/WorldgenCryptoRandom.java
rename to src/main/java/net/edenor/foldenor/secureseed/WorldgenCryptoRandom.java
index 1456e83378be4b83768784bff9421165c405173e..d02b5b487e6b91340a820a06a459273636c86d40 100644
--- a/src/main/java/net/edenor/foldenor/WorldgenCryptoRandom.java
+++ b/src/main/java/net/edenor/foldenor/secureseed/WorldgenCryptoRandom.java
@@ -1,4 +1,4 @@
-package net.edenor.foldenor;
+package net.edenor.foldenor.secureseed;
 
 import net.minecraft.util.Mth;
 import net.minecraft.util.RandomSource;
diff --git a/src/main/java/net/minecraft/server/commands/NewSeedCommand.java b/src/main/java/net/minecraft/server/commands/NewSeedCommand.java
index 86df4e47371e952ae2c31a74dcbad4177a60beed..36d767c87cc6b4fb8157dc64c1107a0529138643 100644
--- a/src/main/java/net/minecraft/server/commands/NewSeedCommand.java
+++ b/src/main/java/net/minecraft/server/commands/NewSeedCommand.java
@@ -9,9 +9,7 @@ import net.minecraft.network.chat.ComponentUtils;
 import net.minecraft.ChatFormatting;
 import net.minecraft.network.chat.ClickEvent;
 import net.minecraft.network.chat.HoverEvent;
-import net.edenor.foldenor.Globals;
-
-import java.util.function.Supplier;
+import net.edenor.foldenor.secureseed.Globals;
 
 public class NewSeedCommand {
     public static void register(CommandDispatcher<CommandSourceStack> dispatcher, boolean dedicated) {
diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
index 9e8ac8b8f97599968fb35dba817e926277fd770a..0c7339f8f0a1ec3867be3b2f39182332053229f3 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
@@ -1,20 +1,15 @@
 package net.minecraft.server.dedicated;
 
-import com.google.common.collect.Lists;
 import com.mojang.authlib.GameProfile;
 import com.mojang.datafixers.DataFixer;
 import com.mojang.logging.LogUtils;
-import java.io.BufferedReader;
+
 import java.io.BufferedWriter;
 import java.io.IOException;
-import java.io.InputStreamReader;
 import java.net.InetAddress;
 import java.net.Proxy;
-import java.nio.charset.StandardCharsets;
 import java.nio.file.Files;
 import java.nio.file.Path;
-import java.util.Collections;
-import java.util.List;
 import java.util.Locale;
 import java.util.Optional;
 import java.util.function.BooleanSupplier;
@@ -46,7 +41,6 @@ import net.minecraft.world.level.GameRules;
 import net.minecraft.world.level.GameType;
 import net.minecraft.world.level.block.entity.SkullBlockEntity;
 import net.minecraft.world.level.storage.LevelStorageSource;
-import org.bukkit.craftbukkit.command.CraftRemoteConsoleCommandSender;
 import org.slf4j.Logger;
 
 // CraftBukkit start
@@ -55,7 +49,7 @@ import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.io.IoBuilder;
 import org.bukkit.command.CommandSender;
 import co.aikar.timings.MinecraftTimings; // Paper
-import net.edenor.foldenor.FoldenorConfig;
+import net.edenor.foldenor.config.FoldenorConfig;
 import org.bukkit.event.server.ServerCommandEvent;
 import org.bukkit.craftbukkit.util.Waitable;
 import org.bukkit.event.server.RemoteServerCommandEvent;
@@ -214,6 +208,7 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
         org.spigotmc.WatchdogThread.doStart(org.spigotmc.SpigotConfig.timeoutTime, org.spigotmc.SpigotConfig.restartOnCrash);
         thread.start(); // Paper - start console thread after MinecraftServer.console & PaperConfig are initialized
         io.papermc.paper.command.PaperCommands.registerCommands(this);
+        net.edenor.foldenor.command.FoldenorCommands.registerCommands(this);
         com.destroystokyo.paper.Metrics.PaperMetrics.startMetrics();
         try {
             FoldenorConfig.init((java.io.File) options.valueOf("foldenor-settings"));
diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java
index 5bcf24798ff37baa2d0f6ace4fa35c08537ca2b5..fb4994cae07f08a44bc2741db4f98992251586c6 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java
@@ -50,7 +50,7 @@ import org.slf4j.Logger;
 import joptsimple.OptionSet;
 // CraftBukkit end
 
-import net.edenor.foldenor.Globals;
+import net.edenor.foldenor.secureseed.Globals;
 
 public class DedicatedServerProperties extends Settings<DedicatedServerProperties> {
 
diff --git a/src/main/java/net/minecraft/server/level/ServerChunkCache.java b/src/main/java/net/minecraft/server/level/ServerChunkCache.java
index c83537ec370b0713b1de55f95c1afc7590a294a3..91a0e61611579c551955b53524872270125f2cf5 100644
--- a/src/main/java/net/minecraft/server/level/ServerChunkCache.java
+++ b/src/main/java/net/minecraft/server/level/ServerChunkCache.java
@@ -11,7 +11,6 @@ import java.util.Collections;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Objects;
-import java.util.Optional;
 import java.util.concurrent.CompletableFuture;
 import java.util.concurrent.Executor;
 import java.util.function.BooleanSupplier;
@@ -48,8 +47,7 @@ import net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemp
 import net.minecraft.world.level.storage.DimensionDataStorage;
 import net.minecraft.world.level.storage.LevelData;
 import net.minecraft.world.level.storage.LevelStorageSource;
-import it.unimi.dsi.fastutil.objects.ReferenceOpenHashSet; // Paper
-import net.edenor.foldenor.Globals;
+import net.edenor.foldenor.secureseed.Globals;
 
 public class ServerChunkCache extends ChunkSource {
 
diff --git a/src/main/java/net/minecraft/server/level/ServerEntity.java b/src/main/java/net/minecraft/server/level/ServerEntity.java
index ad76256268d860c35c7653dac883ab3d4718232a..c83802fbbb6825b5935e9ed20aea25b740a96d89 100644
--- a/src/main/java/net/minecraft/server/level/ServerEntity.java
+++ b/src/main/java/net/minecraft/server/level/ServerEntity.java
@@ -5,7 +5,6 @@ import com.mojang.datafixers.util.Pair;
 import com.mojang.logging.LogUtils;
 import java.util.ArrayList;
 import java.util.Collection;
-import java.util.Collections;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Objects;
@@ -14,7 +13,7 @@ import java.util.function.Consumer;
 import java.util.stream.Stream;
 import javax.annotation.Nullable;
 
-import net.edenor.foldenor.FoldenorConfig;
+import net.edenor.foldenor.config.FoldenorConfig;
 import net.minecraft.network.protocol.Packet;
 import net.minecraft.network.protocol.game.ClientGamePacketListener;
 import net.minecraft.network.protocol.game.ClientboundBundlePacket;
diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index 53f0305baa54dc61058f37f48e7a543836f875a3..2585589c6c7580f4b32034f8e232a9e3837e2722 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -16,7 +16,6 @@ import it.unimi.dsi.fastutil.objects.Object2IntMap.Entry;
 import it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap;
 import it.unimi.dsi.fastutil.objects.ObjectArrayList;
 import it.unimi.dsi.fastutil.objects.ObjectIterator;
-import it.unimi.dsi.fastutil.objects.ObjectLinkedOpenHashSet;
 import it.unimi.dsi.fastutil.objects.ObjectOpenHashSet;
 import java.io.BufferedWriter;
 import java.io.IOException;
@@ -134,12 +133,9 @@ import net.minecraft.world.level.chunk.storage.EntityStorage;
 import net.minecraft.world.level.dimension.BuiltinDimensionTypes;
 import net.minecraft.world.level.dimension.LevelStem;
 import net.minecraft.world.level.dimension.end.EndDragonFight;
-import net.minecraft.world.level.entity.EntityPersistentStorage;
-import net.minecraft.world.level.entity.EntityTickList;
 import net.minecraft.world.level.entity.EntityTypeTest;
 import net.minecraft.world.level.entity.LevelCallback;
 import net.minecraft.world.level.entity.LevelEntityGetter;
-import net.minecraft.world.level.entity.PersistentEntitySectionManager;
 import net.minecraft.world.level.gameevent.DynamicGameEventListener;
 import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.level.gameevent.GameEventDispatcher;
@@ -170,16 +166,13 @@ import org.bukkit.Location;
 import org.bukkit.WeatherType;
 import org.bukkit.craftbukkit.event.CraftEventFactory;
 import org.bukkit.craftbukkit.generator.CustomWorldChunkManager;
-import org.bukkit.craftbukkit.util.CraftNamespacedKey;
 import org.bukkit.craftbukkit.util.WorldUUID;
 import org.bukkit.event.entity.CreatureSpawnEvent;
 import org.bukkit.event.server.MapInitializeEvent;
 import org.bukkit.event.weather.LightningStrikeEvent;
-import org.bukkit.event.world.GenericGameEvent;
 import org.bukkit.event.world.TimeSkipEvent;
 // CraftBukkit end
-import it.unimi.dsi.fastutil.ints.IntArrayList; // Paper
-import net.edenor.foldenor.Globals;
+import net.edenor.foldenor.secureseed.Globals;
 
 public class ServerLevel extends Level implements WorldGenLevel {
 
diff --git a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index c135ce10bc239ddc063a1ace0701b0316cb7259c..47a816a028daca2fa38f9c7a71416c782773494d 100644
--- a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -30,7 +30,7 @@ import java.util.stream.Collectors;
 import java.util.stream.Stream;
 import javax.annotation.Nullable;
 
-import net.edenor.foldenor.FoldenorConfig;
+import net.edenor.foldenor.config.FoldenorConfig;
 import net.minecraft.ChatFormatting;
 import net.minecraft.CrashReport;
 import net.minecraft.CrashReportCategory;
@@ -65,7 +65,6 @@ import net.minecraft.network.chat.SignedMessageBody;
 import net.minecraft.network.chat.SignedMessageChain;
 import net.minecraft.network.protocol.Packet;
 import net.minecraft.network.protocol.PacketUtils;
-import net.minecraft.network.protocol.game.ClientboundAddEntityPacket;
 import net.minecraft.network.protocol.game.ClientboundBlockChangedAckPacket;
 import net.minecraft.network.protocol.game.ClientboundBlockUpdatePacket;
 import net.minecraft.network.protocol.game.ClientboundCommandSuggestionsPacket;
@@ -177,7 +176,6 @@ import net.minecraft.world.level.block.entity.CommandBlockEntity;
 import net.minecraft.world.level.block.entity.JigsawBlockEntity;
 import net.minecraft.world.level.block.entity.SignBlockEntity;
 import net.minecraft.world.level.block.entity.StructureBlockEntity;
-import net.minecraft.world.level.block.state.BlockBehaviour;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.BlockHitResult;
@@ -219,7 +217,6 @@ import org.bukkit.craftbukkit.util.Waitable;
 import org.bukkit.entity.Player;
 import org.bukkit.event.Event;
 import org.bukkit.event.block.Action;
-import org.bukkit.event.block.SignChangeEvent;
 import org.bukkit.event.inventory.ClickType;
 import org.bukkit.event.inventory.CraftItemEvent;
 import org.bukkit.event.inventory.InventoryAction;
@@ -229,8 +226,6 @@ import org.bukkit.event.inventory.InventoryCreativeEvent;
 import org.bukkit.event.inventory.InventoryType.SlotType;
 import org.bukkit.event.inventory.SmithItemEvent;
 import org.bukkit.event.player.AsyncPlayerChatEvent;
-import org.bukkit.event.player.PlayerAnimationEvent;
-import org.bukkit.event.player.PlayerAnimationType;
 import org.bukkit.event.player.PlayerChatEvent;
 import org.bukkit.event.player.PlayerCommandPreprocessEvent;
 import org.bukkit.event.player.PlayerInteractAtEntityEvent;
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 44ad2d55df8755138a7fd31bb5b6d2628567b756..ca2604b4c53c435667b5cdd6ce9fecad2eade2c8 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -25,7 +25,7 @@ import java.util.function.Predicate;
 import java.util.stream.Stream;
 import javax.annotation.Nullable;
 
-import net.edenor.foldenor.FoldenorConfig;
+import net.edenor.foldenor.config.FoldenorConfig;
 import net.minecraft.BlockUtil;
 import net.minecraft.CrashReport;
 import net.minecraft.CrashReportCategory;
@@ -59,7 +59,6 @@ import net.minecraft.network.syncher.EntityDataSerializers;
 import net.minecraft.network.syncher.SynchedEntityData;
 import net.minecraft.resources.ResourceKey;
 import net.minecraft.resources.ResourceLocation;
-import io.papermc.paper.util.MCUtil;
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.server.level.ServerPlayer;
diff --git a/src/main/java/net/minecraft/world/entity/projectile/Projectile.java b/src/main/java/net/minecraft/world/entity/projectile/Projectile.java
index 3c605901b459a74d9523fdec3d493d5f057100e4..da9ab0d8762557e80bb6f6ace65887b8b3016c1e 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/Projectile.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/Projectile.java
@@ -5,7 +5,7 @@ import java.util.Iterator;
 import java.util.UUID;
 import javax.annotation.Nullable;
 
-import net.edenor.foldenor.FoldenorConfig;
+import net.edenor.foldenor.config.FoldenorConfig;
 import net.minecraft.core.BlockPos;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.network.protocol.Packet;
diff --git a/src/main/java/net/minecraft/world/level/chunk/ChunkAccess.java b/src/main/java/net/minecraft/world/level/chunk/ChunkAccess.java
index 564fa4b0665696383c50f673e5ec42123c4166c6..18592aa6cc3b2d9fbb6fe4adffcc11aab1d07de5 100644
--- a/src/main/java/net/minecraft/world/level/chunk/ChunkAccess.java
+++ b/src/main/java/net/minecraft/world/level/chunk/ChunkAccess.java
@@ -53,7 +53,7 @@ import net.minecraft.world.level.material.Fluid;
 import net.minecraft.world.ticks.SerializableTickContainer;
 import net.minecraft.world.ticks.TickContainerAccess;
 import org.slf4j.Logger;
-import net.edenor.foldenor.WorldgenCryptoRandom;
+import net.edenor.foldenor.secureseed.WorldgenCryptoRandom;
 
 public abstract class ChunkAccess implements BlockGetter, BiomeManager.NoiseBiomeSource, LightChunk, StructureAccess {
 
diff --git a/src/main/java/net/minecraft/world/level/chunk/ChunkGenerator.java b/src/main/java/net/minecraft/world/level/chunk/ChunkGenerator.java
index f6a5c922722e9bee4739d95c64966f750623512c..72b35d884aa69a3b921b717c140fdae562eab830 100644
--- a/src/main/java/net/minecraft/world/level/chunk/ChunkGenerator.java
+++ b/src/main/java/net/minecraft/world/level/chunk/ChunkGenerator.java
@@ -24,6 +24,9 @@ import java.util.function.Predicate;
 import java.util.function.Supplier;
 import java.util.stream.Collectors;
 import javax.annotation.Nullable;
+
+import net.edenor.foldenor.secureseed.Globals;
+import net.edenor.foldenor.secureseed.WorldgenCryptoRandom;
 import net.minecraft.CrashReport;
 import net.minecraft.CrashReportCategory;
 import net.minecraft.ReportedException;
@@ -58,11 +61,8 @@ import net.minecraft.world.level.biome.FeatureSorter;
 import net.minecraft.world.level.biome.MobSpawnSettings;
 import net.minecraft.world.level.levelgen.GenerationStep;
 import net.minecraft.world.level.levelgen.Heightmap;
-import net.minecraft.world.level.levelgen.LegacyRandomSource;
 import net.minecraft.world.level.levelgen.RandomState;
-import net.minecraft.world.level.levelgen.RandomSupport;
 import net.minecraft.world.level.levelgen.WorldgenRandom;
-import net.minecraft.world.level.levelgen.XoroshiroRandomSource;
 import net.minecraft.world.level.levelgen.blending.Blender;
 import net.minecraft.world.level.levelgen.placement.PlacedFeature;
 import net.minecraft.world.level.levelgen.structure.BoundingBox;
@@ -77,8 +77,6 @@ import net.minecraft.world.level.levelgen.structure.placement.StructurePlacement
 import net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplateManager;
 import org.apache.commons.lang3.mutable.MutableBoolean;
 
-import net.edenor.foldenor.*;
-
 public abstract class ChunkGenerator {
 
     public static final Codec<ChunkGenerator> CODEC = BuiltInRegistries.CHUNK_GENERATOR.byNameCodec().dispatchStable(ChunkGenerator::codec, Function.identity());
diff --git a/src/main/java/net/minecraft/world/level/chunk/ChunkGeneratorStructureState.java b/src/main/java/net/minecraft/world/level/chunk/ChunkGeneratorStructureState.java
index ebc6b0295e952fc186b2e7e5a05c685f3f08dba6..2d2b118836b33dfec4b7121dcd04ab543f1b96b2 100644
--- a/src/main/java/net/minecraft/world/level/chunk/ChunkGeneratorStructureState.java
+++ b/src/main/java/net/minecraft/world/level/chunk/ChunkGeneratorStructureState.java
@@ -17,6 +17,9 @@ import java.util.concurrent.TimeUnit;
 import java.util.stream.Collectors;
 import java.util.stream.Stream;
 import javax.annotation.Nullable;
+
+import net.edenor.foldenor.secureseed.Globals;
+import net.edenor.foldenor.secureseed.WorldgenCryptoRandom;
 import net.minecraft.Util;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Holder;
@@ -39,7 +42,6 @@ import net.minecraft.world.level.levelgen.structure.placement.RandomSpreadStruct
 import org.spigotmc.SpigotWorldConfig;
 // Spigot end
 
-import net.edenor.foldenor.*;
 
 public class ChunkGeneratorStructureState {
 
diff --git a/src/main/java/net/minecraft/world/level/chunk/ChunkStatus.java b/src/main/java/net/minecraft/world/level/chunk/ChunkStatus.java
index 9a157fd179035cd7032cd96664f9c6ac10d503cb..19b1e1596d24c758c6693f5ddac02748a5380db0 100644
--- a/src/main/java/net/minecraft/world/level/chunk/ChunkStatus.java
+++ b/src/main/java/net/minecraft/world/level/chunk/ChunkStatus.java
@@ -28,7 +28,7 @@ import net.minecraft.world.level.levelgen.Heightmap;
 import net.minecraft.world.level.levelgen.blending.Blender;
 import net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplateManager;
 
-import net.edenor.foldenor.Globals;
+import net.edenor.foldenor.secureseed.Globals;
 
 public class ChunkStatus {
 
diff --git a/src/main/java/net/minecraft/world/level/levelgen/NewWorldOptions.java b/src/main/java/net/minecraft/world/level/levelgen/NewWorldOptions.java
index 118dc6fdd422d9c797d4ab5451eb7fa719a165f8..58ca557eee3c08e1c9ee4eb25830cd2d412023e1 100644
--- a/src/main/java/net/minecraft/world/level/levelgen/NewWorldOptions.java
+++ b/src/main/java/net/minecraft/world/level/levelgen/NewWorldOptions.java
@@ -10,7 +10,7 @@ import java.util.Optional;
 import java.util.OptionalLong;
 
 import java.util.stream.LongStream;
-import net.edenor.foldenor.Globals;
+import net.edenor.foldenor.secureseed.Globals;
 
 public class NewWorldOptions extends WorldOptions {
     public static final MapCodec<NewWorldOptions> CODEC = RecordCodecBuilder.mapCodec((instance) -> {
diff --git a/src/main/java/net/minecraft/world/level/levelgen/feature/GeodeFeature.java b/src/main/java/net/minecraft/world/level/levelgen/feature/GeodeFeature.java
index 52c5068b573269ea3ea2d9a755e916d9462bd67a..443f98236f8aced90efa12227e81fb1f60543255 100644
--- a/src/main/java/net/minecraft/world/level/levelgen/feature/GeodeFeature.java
+++ b/src/main/java/net/minecraft/world/level/levelgen/feature/GeodeFeature.java
@@ -5,6 +5,9 @@ import com.mojang.datafixers.util.Pair;
 import com.mojang.serialization.Codec;
 import java.util.List;
 import java.util.function.Predicate;
+
+import net.edenor.foldenor.secureseed.Globals;
+import net.edenor.foldenor.secureseed.WorldgenCryptoRandom;
 import net.minecraft.Util;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
@@ -19,12 +22,10 @@ import net.minecraft.world.level.block.state.properties.BlockStateProperties;
 import net.minecraft.world.level.levelgen.GeodeBlockSettings;
 import net.minecraft.world.level.levelgen.GeodeCrackSettings;
 import net.minecraft.world.level.levelgen.GeodeLayerSettings;
-import net.minecraft.world.level.levelgen.LegacyRandomSource;
 import net.minecraft.world.level.levelgen.WorldgenRandom;
 import net.minecraft.world.level.levelgen.feature.configurations.GeodeConfiguration;
 import net.minecraft.world.level.levelgen.synth.NormalNoise;
 import net.minecraft.world.level.material.FluidState;
-import net.edenor.foldenor.*;
 
 public class GeodeFeature extends Feature<GeodeConfiguration> {
     private static final Direction[] DIRECTIONS = Direction.values();
diff --git a/src/main/java/net/minecraft/world/level/levelgen/structure/Structure.java b/src/main/java/net/minecraft/world/level/levelgen/structure/Structure.java
index c11cd1e8310ce6a8f8d808fcd195326961353c88..7ccaf26f6dcabe4a78b7ab12ec842dcbe1a44bc3 100644
--- a/src/main/java/net/minecraft/world/level/levelgen/structure/Structure.java
+++ b/src/main/java/net/minecraft/world/level/levelgen/structure/Structure.java
@@ -9,6 +9,9 @@ import java.util.Optional;
 import java.util.function.Consumer;
 import java.util.function.Function;
 import java.util.function.Predicate;
+
+import net.edenor.foldenor.secureseed.Globals;
+import net.edenor.foldenor.secureseed.WorldgenCryptoRandom;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Holder;
 import net.minecraft.core.HolderSet;
@@ -31,13 +34,11 @@ import net.minecraft.world.level.block.Rotation;
 import net.minecraft.world.level.chunk.ChunkGenerator;
 import net.minecraft.world.level.levelgen.GenerationStep;
 import net.minecraft.world.level.levelgen.Heightmap;
-import net.minecraft.world.level.levelgen.LegacyRandomSource;
 import net.minecraft.world.level.levelgen.RandomState;
 import net.minecraft.world.level.levelgen.WorldgenRandom;
 import net.minecraft.world.level.levelgen.structure.pieces.PiecesContainer;
 import net.minecraft.world.level.levelgen.structure.pieces.StructurePiecesBuilder;
 import net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplateManager;
-import net.edenor.foldenor.*;
 
 public abstract class Structure {
     public static final Codec<Structure> DIRECT_CODEC = BuiltInRegistries.STRUCTURE_TYPE.byNameCodec().dispatch(Structure::type, StructureType::codec);
diff --git a/src/main/java/net/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement.java b/src/main/java/net/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement.java
index 94a44f8103c94decc617571905a9722c1e303527..424b0bd3d7661d630cccbf238816439e574aa4fc 100644
--- a/src/main/java/net/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement.java
+++ b/src/main/java/net/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement.java
@@ -4,13 +4,14 @@ import com.mojang.serialization.Codec;
 import com.mojang.serialization.DataResult;
 import com.mojang.serialization.codecs.RecordCodecBuilder;
 import java.util.Optional;
+
+import net.edenor.foldenor.secureseed.Globals;
+import net.edenor.foldenor.secureseed.WorldgenCryptoRandom;
 import net.minecraft.core.Vec3i;
 import net.minecraft.util.ExtraCodecs;
 import net.minecraft.world.level.ChunkPos;
 import net.minecraft.world.level.chunk.ChunkGeneratorStructureState;
-import net.minecraft.world.level.levelgen.LegacyRandomSource;
 import net.minecraft.world.level.levelgen.WorldgenRandom;
-import net.edenor.foldenor.*;
 
 public class RandomSpreadStructurePlacement extends StructurePlacement {
     public static final Codec<RandomSpreadStructurePlacement> CODEC = ExtraCodecs.validate(RecordCodecBuilder.mapCodec((instance) -> {
diff --git a/src/main/java/net/minecraft/world/level/levelgen/structure/placement/StructurePlacement.java b/src/main/java/net/minecraft/world/level/levelgen/structure/placement/StructurePlacement.java
index 497fdad2c2754b8dd9eb6b95d6575042c35eb6cb..4bd9607e27d98bb397466c51cbfb7206eb50753b 100644
--- a/src/main/java/net/minecraft/world/level/levelgen/structure/placement/StructurePlacement.java
+++ b/src/main/java/net/minecraft/world/level/levelgen/structure/placement/StructurePlacement.java
@@ -4,6 +4,9 @@ import com.mojang.datafixers.Products;
 import com.mojang.serialization.Codec;
 import com.mojang.serialization.codecs.RecordCodecBuilder;
 import java.util.Optional;
+
+import net.edenor.foldenor.secureseed.Globals;
+import net.edenor.foldenor.secureseed.WorldgenCryptoRandom;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Holder;
 import net.minecraft.core.Vec3i;
@@ -14,10 +17,8 @@ import net.minecraft.util.ExtraCodecs;
 import net.minecraft.util.StringRepresentable;
 import net.minecraft.world.level.ChunkPos;
 import net.minecraft.world.level.chunk.ChunkGeneratorStructureState;
-import net.minecraft.world.level.levelgen.LegacyRandomSource;
 import net.minecraft.world.level.levelgen.WorldgenRandom;
 import net.minecraft.world.level.levelgen.structure.StructureSet;
-import net.edenor.foldenor.*;
 
 public abstract class StructurePlacement {
     public static final Codec<StructurePlacement> CODEC = BuiltInRegistries.STRUCTURE_PLACEMENT.byNameCodec().dispatch(StructurePlacement::type, StructurePlacementType::codec);
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 8e3fb34782eb67b7658c011d9cea2d9ce99c0534..e38cd6faa29522ca5827c0b9be4ae732e8b80db1 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -24,7 +24,6 @@ import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.io.InputStreamReader;
 import java.net.InetAddress;
-import java.net.InetSocketAddress;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Date;
@@ -45,7 +44,7 @@ import java.util.logging.Logger;
 import java.util.stream.Collectors;
 import javax.imageio.ImageIO;
 
-import net.edenor.foldenor.FoldenorConfig;
+import net.edenor.foldenor.config.FoldenorConfig;
 import net.minecraft.advancements.Advancement;
 import net.minecraft.commands.CommandSourceStack;
 import net.minecraft.commands.Commands;
@@ -239,7 +238,6 @@ import org.bukkit.plugin.PluginManager;
 import org.bukkit.plugin.ServicesManager;
 import org.bukkit.plugin.SimplePluginManager;
 import org.bukkit.plugin.SimpleServicesManager;
-import org.bukkit.plugin.java.JavaPluginLoader;
 import org.bukkit.plugin.messaging.Messenger;
 import org.bukkit.plugin.messaging.StandardMessenger;
 import org.bukkit.potion.Potion;
@@ -1098,7 +1096,7 @@ public final class CraftServer implements Server {
 
         org.spigotmc.SpigotConfig.init((File) console.options.valueOf("spigot-settings")); // Spigot
         this.console.paperConfigurations.reloadConfigs(this.console);
-        net.edenor.foldenor.FoldenorConfig.init((File) console.options.valueOf("foldenor-settings"));
+        FoldenorConfig.init((File) console.options.valueOf("foldenor-settings"));
         for (ServerLevel world : this.console.getAllLevels()) {
             // world.serverLevelData.setDifficulty(config.difficulty); // Paper - per level difficulty
             world.setSpawnSettings(world.serverLevelData.getDifficulty() != Difficulty.PEACEFUL && config.spawnMonsters, config.spawnAnimals); // Paper - per level difficulty (from MinecraftServer#setDifficulty(ServerLevel, Difficulty, boolean))
@@ -1129,6 +1127,7 @@ public final class CraftServer implements Server {
         this.reloadData();
         org.spigotmc.SpigotConfig.registerCommands(); // Spigot
         io.papermc.paper.command.PaperCommands.registerCommands(this.console); // Paper
+        net.edenor.foldenor.command.FoldenorCommands.registerCommands(this.console);
         this.overrideAllCommandBlockCommands = this.commandsConfiguration.getStringList("command-block-overrides").contains("*");
         this.ignoreVanillaPermissions = this.commandsConfiguration.getBoolean("ignore-vanilla-permissions");
 
